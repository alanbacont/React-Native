{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useCounter = function () {\n  _s();\n\n  let inicial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  const [valor, setValor] = useState(0);\n\n  const acumular = numero => {\n    setValor(valor + numero);\n  };\n\n  return {\n    valor,\n    acumular\n  };\n};\n\n_s(useCounter, \"RGpDElC0n4CFKNuBt3JMqgS0fDM=\");","map":{"version":3,"names":["useState","useCounter","inicial","valor","setValor","acumular","numero"],"sources":["/Users/alancontreras/Documents/GitHub/React-Native/src/components/hooks/useCounter.tsx"],"sourcesContent":["import { useState } from \"react\"\n\nexport const useCounter = (inicial: number = 10) => {\n    const [valor, setValor] = useState(0);\n    const acumular = (numero:number) => {\n        setValor(valor + numero);\n    }\n    return {\n        valor,\n        acumular\n    }\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAA0B;EAAA;;EAAA,IAAzBC,OAAyB,uEAAP,EAAO;EAChD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;EACA,MAAMK,QAAQ,GAAIC,MAAD,IAAmB;IAChCF,QAAQ,CAACD,KAAK,GAAGG,MAAT,CAAR;EACH,CAFD;;EAGA,OAAO;IACHH,KADG;IAEHE;EAFG,CAAP;AAIH,CATM;;GAAMJ,U"},"metadata":{},"sourceType":"module"}